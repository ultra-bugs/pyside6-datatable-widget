name: Upload Python Package & Sync Version

on:
  release:
    types: [published, edited]

permissions:
  contents: write # needed for pushing version bump commit
  id-token: write # needed for trusted publishing to PyPI

jobs:
  sync-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed to push tags and commits

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          # Remove 'v' prefix if you use tags like v1.2.3
          VERSION="${TAG_NAME#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update version in setup.py
        run: |
          sed -i -E "s/version=[\"'][0-9a-zA-Z\.\-]+[\"']/version=\"${VERSION}\"/" setup.py

      - name: Update version in datatable/__init__.py
        run: |
          sed -i -E "s/__version__ *= *[\"'][0-9a-zA-Z\.\-]+[\"']/__version__ = \"${VERSION}\"/" datatable/__init__.py

      - name: Commit and push version update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add setup.py datatable/__init__.py
          git commit -m "chore: bump version to $VERSION [GitHub Actions]"
          git push

  build-and-publish:
    runs-on: ubuntu-latest
    needs: sync-version
    environment:
      name: pypi
      url: https://pypi.org/project/pyside6-datatable-widget/${{ github.event.release.tag_name }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
